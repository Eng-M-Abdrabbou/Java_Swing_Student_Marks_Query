/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Teacher.VDI2
 */
import java.util.Scanner;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.Arrays;
import javax.swing.JOptionPane;

public class StudentsMarksQuery extends javax.swing.JFrame {
private static Student[] students;
  
    public StudentsMarksQuery() {
        initComponents();
    }
  public static Student searchForStudent(String studentId) {
        for (int i = 0; i < students.length; i++) {
            if (students[i].getStudent_Id().equals(studentId)) {
                return students[i];
            }
        }
        return null;
    }

    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jRadioButton6 = new javax.swing.JRadioButton();

        jButton2.setText("jButton2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Staff Salary Query Form");

        jLabel1.setText("Student ID");

        jLabel2.setText("Query");

        jRadioButton1.setText("Assignments Mark");

        jButton1.setText("Enter");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.setText("Quizzes Mark");

        jRadioButton3.setText("Midterm Exam Mark");

        jRadioButton4.setText("Total Mark");

        jRadioButton5.setText("Final Exam Mark");

        jRadioButton6.setText("Project Mark");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 79, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton3)
                    .addComponent(jRadioButton2)
                    .addComponent(jRadioButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton6)
                            .addComponent(jRadioButton4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGap(44, 44, 44))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jRadioButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton3))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jRadioButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(51, 51, 51))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String theStudentId = this.jTextField1.getText().trim();
        Student theStudent = StudentsMarksQuery.searchForStudent(theStudentId);
        if (theStudent == null) {
            JOptionPane.showMessageDialog(rootPane, "The student id " + theStudentId + " does not exist!", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            if(this.jRadioButton1.isSelected())
              JOptionPane.showMessageDialog(rootPane, "The asignments  for student "+theStudentId+" is "+ theStudent.getAssignments()+" Marks out of 10", " Marks out of 10", JOptionPane.PLAIN_MESSAGE);
             else if(this.jRadioButton2.isSelected())
              JOptionPane.showMessageDialog(rootPane, "The quizzes marks  for student "+theStudentId+" is "+ theStudent.getQuizzes()+" Marks out of 10", " Marks out of 10", JOptionPane.PLAIN_MESSAGE);
             else if(this.jRadioButton3.isSelected())
              JOptionPane.showMessageDialog(rootPane, "The midterms marks  for student "+theStudentId+" is "+ theStudent.getMidtermExam()+" Marks out of 20", " Marks out of 20", JOptionPane.PLAIN_MESSAGE);
             else if(this.jRadioButton4.isSelected())
              JOptionPane.showMessageDialog(rootPane, "The total marks  for student "+theStudentId+" is "+ (theStudent.getAssignments()+theStudent.getMidtermExam()+theStudent.getQuizzes()+theStudent.getFinalExam()+theStudent.getProject())+" Marks out of 100", " Marks out of 100", JOptionPane.PLAIN_MESSAGE);
             else if(this.jRadioButton5.isSelected())              
              JOptionPane.showMessageDialog(rootPane, "The final exam marks  for student "+theStudentId+" is "+ theStudent.getFinalExam()+" Marks out of 40", " Marks out of 40", JOptionPane.PLAIN_MESSAGE);
             else if (this.jRadioButton6.isSelected()) {
              JOptionPane.showMessageDialog(rootPane, "The Projects marks  for student " + theStudentId + " is " + theStudent.getProject()+" Marks out of 20", " Marks out of 20", JOptionPane.PLAIN_MESSAGE);
            } else {
              JOptionPane.showMessageDialog(rootPane, "No Selection made for : " + theStudentId, "Selection Not made", JOptionPane.PLAIN_MESSAGE);
            }

        }

    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentsMarksQuery.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentsMarksQuery.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentsMarksQuery.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentsMarksQuery.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                String fileName = "ass2_student_results.csv";
                try {
                    Scanner data = new Scanner(new File(fileName));
                    int student_count = getStudentsCount(data);
                    data = new Scanner(new File(fileName));
                    StudentsMarksQuery.students = readStudentData(data, student_count);
                    data.close();
                } catch (FileNotFoundException e) {
                    System.out.println("File Not found" + e.getMessage());
                }

                new StudentsMarksQuery().setVisible(true);
            }

            private int getStudentsCount(Scanner data) {

                int count = 0;
                while (data.hasNext()) {
                    String line = data.nextLine();
                    count++;

                }
                return count;

            }

            private Student[] readStudentData(Scanner data, int studentCount) {
                Student[] students = new Student[studentCount];
                int index = 0;
                while (data.hasNext()) {
                    String line = data.nextLine();
                    String[] words = line.split(",");
                    String Student_Id = words[0];
                    //double salary = Double.parseDouble(words[1]);
                    double Quizzes = Double.parseDouble(words[1]);
                    double Assignments = Double.parseDouble(words[2]);
                    double MidtermExam = Double.parseDouble(words[3]);
                    double Project = Double.parseDouble(words[4]);
                    double FinalExam = Double.parseDouble(words[5]);
                    students[index] = new Student(Student_Id, Quizzes, Assignments, MidtermExam, Project, FinalExam);
                    index++;
                }

                return students;
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
class Student {

    private final String Student_Id;
    private double Quizzes; //(out of 10) 
    private double Assignments; //(out of 10)
    private double MidtermExam; //(out of 20)
    private double Project; //(out of 20) 
    private double FinalExam; //(out of 40)

//private final String staff_Id;
//private double salary;
    public Student(String Student_Id, double Quizzes, double Assignments, double MidtermExam, double Project, double FinalExam) {
        this.Student_Id = Student_Id;
        this.Quizzes = Quizzes;
        this.Assignments = Assignments;
        this.MidtermExam = MidtermExam;
        this.Project = Project;
        this.FinalExam = FinalExam;
    }

//    public Student(String staff_Id, double salary) {
//        this.staff_Id=staff_Id;
//        this.salary=salary;
//    }   
//public String getStaff_Id(){
//return staff_Id;
//
//}
//public double getSalary(){
//return salary;
//}
//
//public void setSalary (double salary){
//this.salary= salary;
//}
//    @Override
//    public String toString() {
//        return "Staff "+ "staff_Id"+ staff_Id+ " Salary "+ salary;
//    }
    public String getStudent_Id() {
        return Student_Id;
    }

    public double getQuizzes() {
        return Quizzes;
    }

    public void setQuizzes(double Quizzes) {
        this.Quizzes = Quizzes;
    }

    public double getAssignments() {
        return Assignments;
    }

    public void setAssignments(double Assignments) {
        this.Assignments = Assignments;
    }

    public double getMidtermExam() {
        return MidtermExam;
    }

    public void setMidtermExam(double MidtermExam) {
        this.MidtermExam = MidtermExam;
    }

    public double getProject() {
        return Project;
    }

    public void setProject(double Project) {
        this.Project = Project;
    }

    public double getFinalExam() {
        return FinalExam;
    }

    public void setFinalExam(double FinalExam) {
        this.FinalExam = FinalExam;
    }
}
